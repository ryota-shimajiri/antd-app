{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLayoutUpdateEffect = exports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _canUseDom = _interopRequireDefault(require(\"../Dom/canUseDom\"));\n/**\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\n */\n\n\nvar useLayoutEffect = process.env.NODE_ENV !== 'test' && (0, _canUseDom.default)() ? React.useLayoutEffect : React.useEffect;\nvar _default = useLayoutEffect;\nexports.default = _default;\n\nvar useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\n  var firstMountRef = React.useRef(true);\n  useLayoutEffect(function () {\n    if (!firstMountRef.current) {\n      return callback();\n    }\n  }, deps); // We tell react that first mount has passed\n\n  useLayoutEffect(function () {\n    firstMountRef.current = false;\n    return function () {\n      firstMountRef.current = true;\n    };\n  }, []);\n};\n\nexports.useLayoutUpdateEffect = useLayoutUpdateEffect;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","Object","defineProperty","exports","value","useLayoutUpdateEffect","React","_canUseDom","useLayoutEffect","process","env","NODE_ENV","useEffect","_default","callback","deps","firstMountRef","useRef","current"],"sources":["/Users/shimajiri/develop/antd_test/antd-app/node_modules/rc-util/lib/hooks/useLayoutEffect.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLayoutUpdateEffect = exports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _canUseDom = _interopRequireDefault(require(\"../Dom/canUseDom\"));\n\n/**\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\n */\nvar useLayoutEffect = process.env.NODE_ENV !== 'test' && (0, _canUseDom.default)() ? React.useLayoutEffect : React.useEffect;\nvar _default = useLayoutEffect;\nexports.default = _default;\n\nvar useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\n  var firstMountRef = React.useRef(true);\n  useLayoutEffect(function () {\n    if (!firstMountRef.current) {\n      return callback();\n    }\n  }, deps); // We tell react that first mount has passed\n\n  useLayoutEffect(function () {\n    firstMountRef.current = false;\n    return function () {\n      firstMountRef.current = true;\n    };\n  }, []);\n};\n\nexports.useLayoutUpdateEffect = useLayoutUpdateEffect;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEA,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAAvF;;AAEAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,qBAAR,GAAgCF,OAAO,CAACJ,OAAR,GAAkB,KAAK,CAAvD;;AAEA,IAAIO,KAAK,GAAGN,uBAAuB,CAACF,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIS,UAAU,GAAGV,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAAvC;AAEA;AACA;AACA;;;AACA,IAAIU,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IAAmC,CAAC,GAAGJ,UAAU,CAACR,OAAf,GAAnC,GAA+DO,KAAK,CAACE,eAArE,GAAuFF,KAAK,CAACM,SAAnH;AACA,IAAIC,QAAQ,GAAGL,eAAf;AACAL,OAAO,CAACJ,OAAR,GAAkBc,QAAlB;;AAEA,IAAIR,qBAAqB,GAAG,SAASA,qBAAT,CAA+BS,QAA/B,EAAyCC,IAAzC,EAA+C;EACzE,IAAIC,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAa,IAAb,CAApB;EACAT,eAAe,CAAC,YAAY;IAC1B,IAAI,CAACQ,aAAa,CAACE,OAAnB,EAA4B;MAC1B,OAAOJ,QAAQ,EAAf;IACD;EACF,CAJc,EAIZC,IAJY,CAAf,CAFyE,CAM/D;;EAEVP,eAAe,CAAC,YAAY;IAC1BQ,aAAa,CAACE,OAAd,GAAwB,KAAxB;IACA,OAAO,YAAY;MACjBF,aAAa,CAACE,OAAd,GAAwB,IAAxB;IACD,CAFD;EAGD,CALc,EAKZ,EALY,CAAf;AAMD,CAdD;;AAgBAf,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC"},"metadata":{},"sourceType":"script"}